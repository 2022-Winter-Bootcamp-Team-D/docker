# upstream backend {
#     server backend:8000;
# }

# server {
#     listen 80;
#     sever_name = localhost;
#     charset utf-8;
#     client_max_body_size 1000M;

#     # 요청받은 uri로 연결 ex) http://127.0.0.1/login
#     location /api/ {
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header Host $http_host;
#         proxy_redirect off;
#         proxy_pass http://api;
#     }

#     #ignore cache frontend
#     location ~* (service-worker\.js)$ {
#         add_header 'Cache-Control' 'no-strore, no-cache, must-revalidate, proxy-revalidate, max-age=0';
#         expires off;
#         proxy_no_cache 1;
#     }

#     location / {
#         # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         # proxy_set_header X-Forwarded-Proto $scheme;
#         # proxy_set_header Host $http_host;
#         # proxy_redirect off;
#         # proxy_pass http://;

#         root /var/www/frontend;
#         try_files $uri $uri/ /index.html?q=$uri&$args;
#     }
# }

upstream django {
    server backend:8000;
}

server {
    listen 80;
    # sever_name = waiter.com;
    charset utf-8;

    location / {
        proxy_pass http://django;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    location /static/ {
        alias /backend/static/;
    }
}