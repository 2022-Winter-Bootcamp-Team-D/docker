upstream backend {
    server backend:8000;
}

upstream frontend {
    server frontend:3000;
}

server {
    listen 80;

    # location /admin {
    #     proxy_pass http://backend;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $host;
    #     proxy_redirect off;
    # }

    location /api/ {
        proxy_pass http://backend;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    # location /static/admin/ {
    #     alias /usr/src/app/static/admin/;
    # }

    # location /static/rest_framework/ {
    #     alias /usr/src/app/static/rest_framework/;
    # }

    # location /media/ {
    #     alias /usr/src/app/media/;
    # }

    location / {
        proxy_pass http://frontend;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }
}

# upstream api {
#     server backend:8000; 
# }

# server {
    
#     listen 80;
#     server_name localhost;
#     charset utf-8;
#     client_max_body_size 1000M;

#     # 요청받은 uri로 연결 eg) http://127.0.0.1/login
#     location /api/ {
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header Host $http_host;
#         proxy_redirect off;
#         proxy_pass http://api;
#     }

   
#     #ignore cache frontend
#     location ~* (service-worker\.js)$ {
#         add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
#         expires off;
#         proxy_no_cache 1;
#     }
    
#     location / {

#         # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         # proxy_set_header X-Forwarded-Proto $scheme;
#         # proxy_set_header Host $http_host;
#         # proxy_redirect off;
#         # proxy_pass http://;
#         # autoindex on;
#         # autoindex_exact_size on;
#         # index index.html index.htm index.html index.php;

#         root /var/www/frontend;
#         try_files $uri $uri/ /index.html?q=$uri&$args;
#     }
# }

# # upstream backend {
# #     server backend:8000;
# # }

# # server {
# #     listen 80;
# #     sever_name = localhost;
# #     charset utf-8;
# #     client_max_body_size 1000M;

# #     # 요청받은 uri로 연결 ex) http://127.0.0.1/login
# #     location /api/ {
# #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# #         proxy_set_header X-Forwarded-Proto $scheme;
# #         proxy_set_header Host $http_host;
# #         proxy_redirect off;
# #         proxy_pass http://api;
# #     }

# #     #ignore cache frontend
# #     location ~* (service-worker\.js)$ {
# #         add_header 'Cache-Control' 'no-strore, no-cache, must-revalidate, proxy-revalidate, max-age=0';
# #         expires off;
# #         proxy_no_cache 1;
# #     }

# #     location / {
# #         # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# #         # proxy_set_header X-Forwarded-Proto $scheme;
# #         # proxy_set_header Host $http_host;
# #         # proxy_redirect off;
# #         # proxy_pass http://;

# #         root /var/www/frontend;
# #         try_files $uri $uri/ /index.html?q=$uri&$args;
# #     }
# # }

# # upstream backend {
# #     server backend:8000;
# # }

# # server {
# #     listen 80;
# #     # sever_name = waiter.com;
# #     charset utf-8;
# #     client_max_body_size 1000M;

# #     location / {
# #         root /var/www/frontend;
# #         index  index.html index.htm;
# #         try_files $uri $uri/ /index.html;
# #     }

# #     location /static/ {
# #         alias /backend/static/;
# #     }

# #     location /api/ {
# #         proxy_pass http://backend;
# #         proxy_set_header Host $host;
# #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# #         proxy_redirect off;
# #     }


# #     location /metrics{
# #         stub_status on;
# #         allow all; # allow 접근을 허용할 주소 설정
# #         # deny 접근을 허용하지 않을 주소 설정
# #     }
# # }